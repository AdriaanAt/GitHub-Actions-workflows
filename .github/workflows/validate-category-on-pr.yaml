# Checks for the presence of atleast one allowed_categories listed in ./script/validate-categories/settings.json in each of the properties.json file
name: Validate Categories on PR

# read-only repo token
# no access to secrets
on:
  pull_request:

jobs:
  validate-categories:
    runs-on: ubuntu-latest

    steps:        
      - uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@473e4d8fe5dd94ee328fdfca9f8c9c7afc9dae5e
        with:
          ruby-version: 2.7.2

      - name: Validate Categories
        id: validate-categories
        run: |
          ruby validate.rb
        working-directory: ./script/validate-categories
      - name: Format Comment
        id: comment-format
        shell: bash
        run: |
          validation_content_length=`echo "${{join(steps.validate-categories.outputs.*,',')}}" | wc -c`
          if [ $validation_content_length -le 1 ]; then
            echo "no output from validate-category"
            exit 0;
          fi
          allowed_categories=$(cat ./script/validate-categories/settings.json | ruby -r json -e 'puts JSON.parse(STDIN.read)["allowed_categories"].map { |c| "- #{c}"}')
          MY_STRING=$(cat <<-EOF
          :heavy_exclamation_mark: :heavy_exclamation_mark: The following templates did not contain a recognised category. Please note that setting categories in the properties.json file of the template will result in better visibility and recommendation.
          The recognised categories are:
          $allowed_categories
          
          |Workflow Template Id|
          |:----:  |
          EOF
          )
          MY_STRING="${MY_STRING//'%'/'%25'}"
          MY_STRING="${MY_STRING//$'\n'/'%0A'}"
          MY_STRING="${MY_STRING//$'\r'/'%0D'}"
          MY_STRING="${MY_STRING}%0A${{join(steps.validate-categories.outputs.*, '%0A')}}"
          echo "::set-output name=content::$MY_STRING"
          

      - name: Save Validation Output 
        if: ${{steps.comment-format.outputs.content && steps.comment-format.outputs.content != '' }}
        run: |
          mkdir -p ./category_validation
          echo "${{ steps.comment-format.outputs.content }}" > ./category_validation/output
          echo ${{ github.event.number }} > ./category_validation/issue_number

      - uses: actions/upload-artifact@v2
        if: ${{steps.comment-format.outputs.content && steps.comment-format.outputs.content != '' }}
        with:
          name: category_validation
          path: category_validation/
